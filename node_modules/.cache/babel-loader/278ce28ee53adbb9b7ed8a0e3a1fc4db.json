{"ast":null,"code":"export default {\n  name: 'Results',\n  props: {\n    imgData: null,\n    resData: String\n  },\n\n  data() {\n    return {\n      selectedImage: null\n    };\n  },\n\n  computed: {\n    displayImg() {\n      console.log(typeof selectedImage);\n      this.imgData = new Image();\n      var reader = new FileReader(); //when the reader is loaded, the imgFile is assigned the reading/event result(image is read onto the web page)\n\n      reader.onload = e => {\n        this.imgData = e.target.result;\n      }; //Read the uploaded file form the input as URL using the reader.\n\n\n      reader.readAsDataURL(this.selectedImage); //console log return this as undefined\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoBA,eAAe;AACXA,MAAI,EAAE,SADK;AAEXC,OAAK,EAAE;AACHC,WAAO,EAAE,IADN;AAEHC,WAAO,EAAEC;AAFN,GAFI;;AAMXC,MAAG,GAAK;AACJ,WAAO;AACHC,mBAAa,EAAE;AADZ,KAAP;AAGH,GAVU;;AAWXC,UAAQ,EAAE;AACNC,cAAU,GAAG;AACTC,aAAO,CAACC,GAAR,CAAY,OAAOJ,aAAnB;AACA,WAAKJ,OAAL,GAAe,IAAIS,KAAJ,EAAf;AACA,UAAIC,MAAK,GAAI,IAAIC,UAAJ,EAAb,CAHS,CAKT;;AACAD,YAAM,CAACE,MAAP,GAAiBC,CAAD,IAAO;AACnB,aAAKb,OAAL,GAAea,CAAC,CAACC,MAAF,CAASC,MAAxB;AACJ,OAFA,CANS,CAUT;;;AACAL,YAAM,CAACM,aAAP,CAAqB,KAAKZ,aAA1B,EAXS,CAWgC;AAC7C;;AAbM;AAXC,CAAf","names":["name","props","imgData","resData","String","data","selectedImage","computed","displayImg","console","log","Image","reader","FileReader","onload","e","target","result","readAsDataURL"],"sourceRoot":"","sources":["C:\\Users\\User\\Documents\\GitHub\\AIOT_Aquatic_Capstone\\vuefrontend\\src\\components\\Results.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <img :src=\"imgData\" v-if=\"displayImg()\" style=\"max-width: 100%;\" />\r\n        <img v-else/>\r\n        <div v-if=\"responseData\">\r\n        <div class=\"font-weight-bold\">\r\n            Prediction: {{ resData.predictedTagName}}\r\n        </div>\r\n        <div class=\"font-weight-bold\"> \r\n            Probability: {{ (resData.prediction[0].probability * 100).toFixed(3)}} %\r\n        </div>\r\n        </div>\r\n        <div v-else class=\"font-weight-bold\">\r\n            Please Upload an Image\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default({\r\n    name: 'Results',\r\n    props: {\r\n        imgData: null,\r\n        resData: String\r\n    },\r\n    data () {\r\n        return {\r\n            selectedImage: null\r\n        }\r\n    },\r\n    computed: {\r\n        displayImg() {\r\n            console.log(typeof selectedImage)\r\n            this.imgData = new Image()\r\n            var reader = new FileReader()\r\n\r\n            //when the reader is loaded, the imgFile is assigned the reading/event result(image is read onto the web page)\r\n            reader.onload = (e) => {\r\n                this.imgData = e.target.result\r\n            }\r\n\r\n            //Read the uploaded file form the input as URL using the reader.\r\n            reader.readAsDataURL(this.selectedImage) //console log return this as undefined\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}